#Environnement de dev
services:
  #web API (app node)
  api:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    environment:
      - ENV=dev
      - DATABASE_HOST=db
      - DATABASE_NAME=${DATABASE_NAME}
      - PORT=3306
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    labels:
      - "autoheal=true"
    develop:
      watch:
        - path: ./api/
          action: sync
          target: /usr/src/app
    container_name: ${PROJECT_NAME}-api
    ports:
      - ${HOST_PORT_API}:3000
    depends_on:
      db:
        condition: service_healthy
        restart: true
    healthcheck:
        test: ["CMD", "mysqladmin", "-hdb", "-P3306", "ping", "--silent"]
        interval: 5s
        timeout: 5s
        retries: 5 
    command: ["./node_modules/nodemon/bin/nodemon.js", "./bin/www"]

  db:
    image: mysql:8
    restart: always
    labels:
      - "autoheal=true"    
    environment:
      - MYSQL_DATABASE=mydb
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./init/:/docker-entrypoint-initdb.d/
      - ./dbdata:/var/lib/mysql
    ports:
      - ${HOST_PORT_DB}:3306
    container_name: ${PROJECT_NAME}-db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 5s
      timeout: 5s
      retries: 5
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    container_name: ${PROJECT_NAME}-adminer
    ports:
      - ${HOST_PORT_ADMINER}:8080
