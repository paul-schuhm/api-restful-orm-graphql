/*
 * DÃ©mo Design-first du service web de billetterie de concerts
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";

/**
* Administration service.
* @module api/AdministrationApi
* @version 0.0.1
*/
export default class AdministrationApi {

    /**
    * Constructs a new AdministrationApi. 
    * @alias module:api/AdministrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the loginPost operation.
     * @callback moduleapi/AdministrationApi~loginPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * S&#x27;authentifier comme administrateur du service
     * Seuls les administrateurs peuvent s&#x27;authentifier pour l&#x27;instant
     * @param {Object} opts Optional parameters
     * @param {String} opts.pseudo 
     * @param {String} opts.password 
     * @param {module:api/AdministrationApi~loginPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    loginPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        'pseudo': opts['pseudo'],'password': opts['password']
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}